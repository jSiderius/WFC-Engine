extends Node

# TODO: This mess from hell should be nicely formatted in a json file

enum Dir {
	NORTH = 0,
	EAST  = 1,
	SOUTH = 2,
	WEST  = 3,
	ANY = 4,
}

## Tile Types
enum TileType{
	TILE_ERROR = -1,
	
	LAND_01,
	LAND_02,
	LAND_03,
	LAND_04,
	LAND_05,
	LAND_06,
	LAND_07,
	LAND_08,
	LAND_09,
	LAND_10,
	LAND_11,
	LAND_12,
	LAND_13,
	LAND_14,
	LAND_15,
	LAND_16,
	LAND_17,
	LAND_18,
	LAND_19,
	LAND_20,
	LAND_21,
	LAND_22,

	ROAD_01,
	ROAD_02,
	ROAD_03,
	ROAD_04,
	ROAD_05,
	ROAD_06,
	ROAD_07,
	ROAD_08,
	ROAD_09,
	ROAD_10,
	ROAD_11,
	ROAD_12,
	ROAD_13,
	ROAD_14,
	ROAD_15,

	WATER,
	WATER_NW,
	WATER_W,
	WATER_SW,
	WATER_S,
	WATER_SE,
	WATER_E,
	WATER_NE,
	WATER_N,
	WATER_01,
	WATER_02,
	WATER_03,
	WATER_04,
	WATER_05,
	# WATER_06,
	WATER_07,
	WATER_08,
	# WATER_09,
	WATER_10,

	WATER_11,
	WATER_12,
	WATER_13,
	WATER_14,
	WATER_15,
	WATER_16,

	CASTLE_WALL_01, 
	CASTLE_WALL_02,
	CASTLE_TOWER_01,

	BRIDGE_01,
	BRIDGE_02,
	BRIDGE_03,
	BRIDGE_04,
	BRIDGE_05,
	BRIDGE_06,


}

enum EdgeType {
	WATER,
	LAND,
	ERROR,
	ALL,

	LAND_WATER_N,
	LAND_WATER_E,
	LAND_WATER_S,
	LAND_WATER_W,
	LAND_WATER_2,

	ROCK_N,
	ROCK_E,
	ROCK_S,
	ROCK_W,
	ROCK_INNER,

	ROAD,

	CASTLE_TOWER,
	CASTLE_WALL,

	BRIDGE,
	BRIDGE_SIDE,

}

var edge_rules: Dictionary = build_edge_rules()

func build_edge_rules() -> Dictionary:
	var all = [EdgeType.ERROR, EdgeType.ALL]

	var rules = {
		EdgeType.WATER : [EdgeType.WATER, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],
		EdgeType.LAND : [EdgeType.LAND, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],

		EdgeType.LAND_WATER_N : [EdgeType.LAND_WATER_N, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],
		EdgeType.LAND_WATER_E : [EdgeType.LAND_WATER_E, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],
		EdgeType.LAND_WATER_S : [EdgeType.LAND_WATER_S, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],
		EdgeType.LAND_WATER_W : [EdgeType.LAND_WATER_W, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],
		EdgeType.LAND_WATER_2 : [EdgeType.LAND_WATER_2, EdgeType.BRIDGE_SIDE, EdgeType.CASTLE_TOWER],

		EdgeType.ROCK_N : [EdgeType.ROCK_N],
		EdgeType.ROCK_E : [EdgeType.ROCK_E],
		EdgeType.ROCK_S : [EdgeType.ROCK_S],
		EdgeType.ROCK_W : [EdgeType.ROCK_W],
		EdgeType.ROCK_INNER : [EdgeType.ROCK_INNER],

		EdgeType.ROAD : [EdgeType.ROAD, EdgeType.BRIDGE, EdgeType.CASTLE_TOWER],

		EdgeType.CASTLE_WALL : [EdgeType.CASTLE_WALL, EdgeType.CASTLE_TOWER],
		EdgeType.CASTLE_TOWER : [EdgeType.CASTLE_WALL, EdgeType.CASTLE_TOWER, EdgeType.LAND, EdgeType.ROAD, EdgeType.WATER, EdgeType.LAND_WATER_N, EdgeType.LAND_WATER_E, EdgeType.LAND_WATER_S, EdgeType.LAND_WATER_W, EdgeType.LAND_WATER_W, EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE],
		EdgeType.BRIDGE : [EdgeType.ROAD, EdgeType.BRIDGE, EdgeType.CASTLE_TOWER],
		EdgeType.BRIDGE_SIDE : [EdgeType.WATER, EdgeType.BRIDGE_SIDE, EdgeType.LAND, EdgeType.LAND_WATER_N, EdgeType.LAND_WATER_E, EdgeType.LAND_WATER_S, EdgeType.LAND_WATER_W, EdgeType.LAND_WATER_2, EdgeType.CASTLE_TOWER]
	}

	for edge in all:
		rules[edge] = rules.keys()
		for key in rules.keys():
			rules[key].append(edge)
	

	return rules

# [N, E, S, W]
const tile_edges : Dictionary = {
	TileType.TILE_ERROR : [EdgeType.ERROR, EdgeType.ERROR, EdgeType.ERROR, EdgeType.ERROR],

	TileType.LAND_01 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_02 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_03 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_04 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_05 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_06 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_07 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_08 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_09 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_10 : [EdgeType.LAND, EdgeType.ROCK_N, EdgeType.ROCK_W, EdgeType.LAND],
	TileType.LAND_11 : [EdgeType.LAND, EdgeType.ROCK_N, EdgeType.ROCK_INNER, EdgeType.ROCK_N],
	TileType.LAND_12 : [EdgeType.ROCK_W, EdgeType.ROCK_S, EdgeType.LAND, EdgeType.LAND],
	TileType.LAND_13 : [EdgeType.ROCK_W, EdgeType.ROCK_INNER, EdgeType.ROCK_W, EdgeType.LAND],
	TileType.LAND_14 : [EdgeType.ROCK_INNER, EdgeType.ROCK_INNER, EdgeType.ROCK_INNER, EdgeType.ROCK_INNER],
	TileType.LAND_15 : [EdgeType.ROCK_E, EdgeType.LAND, EdgeType.ROCK_E, EdgeType.ROCK_INNER],
	TileType.LAND_16 : [EdgeType.LAND, EdgeType.LAND, EdgeType.ROCK_E, EdgeType.ROCK_N],
	TileType.LAND_17 : [EdgeType.ROCK_INNER, EdgeType.ROCK_S, EdgeType.LAND, EdgeType.ROCK_S],
	TileType.LAND_18 : [EdgeType.ROCK_E, EdgeType.LAND, EdgeType.LAND, EdgeType.ROCK_S],
	TileType.LAND_19 : [EdgeType.ROCK_W, EdgeType.ROCK_INNER, EdgeType.ROCK_INNER, EdgeType.ROCK_N],
	TileType.LAND_20 : [EdgeType.ROCK_E, EdgeType.ROCK_N, EdgeType.ROCK_INNER, EdgeType.ROCK_INNER],
	TileType.LAND_21 : [EdgeType.ROCK_INNER, EdgeType.ROCK_INNER, EdgeType.ROCK_W, EdgeType.ROCK_S],
	TileType.LAND_22 : [EdgeType.ROCK_INNER, EdgeType.ROCK_S, EdgeType.ROCK_E, EdgeType.ROCK_INNER],

	TileType.WATER : [EdgeType.WATER, EdgeType.WATER, EdgeType.WATER, EdgeType.WATER],
	TileType.WATER_NW : [EdgeType.LAND, EdgeType.LAND_WATER_N, EdgeType.LAND_WATER_W, EdgeType.LAND],
	TileType.WATER_W : [EdgeType.LAND_WATER_W, EdgeType.WATER, EdgeType.LAND_WATER_W, EdgeType.LAND],
	TileType.WATER_SW : [EdgeType.LAND_WATER_W, EdgeType.LAND_WATER_S, EdgeType.LAND, EdgeType.LAND],
	TileType.WATER_S : [EdgeType.WATER, EdgeType.LAND_WATER_S, EdgeType.LAND, EdgeType.LAND_WATER_S],
	TileType.WATER_SE : [EdgeType.LAND_WATER_E, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND_WATER_S],
	TileType.WATER_E : [EdgeType.LAND_WATER_E, EdgeType.LAND, EdgeType.LAND_WATER_E, EdgeType.WATER],
	TileType.WATER_NE : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND_WATER_E, EdgeType.LAND_WATER_N],
	TileType.WATER_N : [EdgeType.LAND, EdgeType.LAND_WATER_N, EdgeType.WATER, EdgeType.LAND_WATER_N],

	TileType.WATER_01 : [EdgeType.WATER, EdgeType.WATER, EdgeType.LAND_WATER_W, EdgeType.LAND_WATER_S],
	TileType.WATER_02 : [EdgeType.WATER, EdgeType.LAND_WATER_S, EdgeType.LAND_WATER_E, EdgeType.WATER],
	TileType.WATER_03 : [EdgeType.LAND_WATER_E, EdgeType.LAND_WATER_N, EdgeType.WATER, EdgeType.WATER],
	TileType.WATER_04 : [EdgeType.LAND_WATER_W, EdgeType.WATER, EdgeType.WATER, EdgeType.LAND_WATER_N],
	TileType.WATER_05 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND_WATER_2, EdgeType.LAND],
	# TileType.WATER_06 : [EdgeType.LAND_WATER_2, EdgeType.LAND, EdgeType.LAND_WATER_2, EdgeType.LAND],
	TileType.WATER_07 : [EdgeType.LAND_WATER_2, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.WATER_08 : [EdgeType.LAND, EdgeType.LAND_WATER_2, EdgeType.LAND, EdgeType.LAND],
	# TileType.WATER_09 : [EdgeType.LAND, EdgeType.LAND_WATER_2, EdgeType.LAND, EdgeType.LAND_WATER_2],
	TileType.WATER_10 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND_WATER_2],

	TileType.WATER_11 : [EdgeType.LAND_WATER_2, EdgeType.LAND_WATER_N, EdgeType.WATER, EdgeType.LAND_WATER_N],
	TileType.WATER_12 : [EdgeType.WATER, EdgeType.LAND_WATER_S, EdgeType.LAND_WATER_2, EdgeType.LAND_WATER_S],
	TileType.WATER_13 : [EdgeType.LAND_WATER_E, EdgeType.LAND_WATER_2, EdgeType.LAND_WATER_E, EdgeType.WATER],
	TileType.WATER_14 : [EdgeType.LAND_WATER_W, EdgeType.WATER, EdgeType.LAND_WATER_W, EdgeType.LAND_WATER_2],
	TileType.WATER_15 : [EdgeType.WATER, EdgeType.WATER, EdgeType.WATER, EdgeType.WATER],
	TileType.WATER_16 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],

	TileType.ROAD_01 : [EdgeType.LAND, EdgeType.LAND, EdgeType.ROAD, EdgeType.LAND],
	TileType.ROAD_02 : [EdgeType.ROAD, EdgeType.LAND, EdgeType.ROAD, EdgeType.LAND],
	TileType.ROAD_03 : [EdgeType.ROAD, EdgeType.LAND, EdgeType.LAND, EdgeType.LAND],
	TileType.ROAD_04 : [EdgeType.LAND, EdgeType.ROAD, EdgeType.ROAD, EdgeType.LAND],
	TileType.ROAD_05 : [EdgeType.LAND, EdgeType.ROAD, EdgeType.ROAD, EdgeType.ROAD],
	TileType.ROAD_06 : [EdgeType.LAND, EdgeType.LAND, EdgeType.ROAD, EdgeType.ROAD],
	TileType.ROAD_07 : [EdgeType.ROAD, EdgeType.ROAD, EdgeType.ROAD, EdgeType.LAND],
	TileType.ROAD_08 : [EdgeType.ROAD, EdgeType.ROAD, EdgeType.ROAD, EdgeType.ROAD],
	TileType.ROAD_09 : [EdgeType.ROAD, EdgeType.LAND, EdgeType.ROAD, EdgeType.ROAD],
	TileType.ROAD_10 : [EdgeType.ROAD, EdgeType.ROAD, EdgeType.LAND, EdgeType.LAND],
	TileType.ROAD_11 : [EdgeType.ROAD, EdgeType.ROAD, EdgeType.LAND, EdgeType.ROAD],
	TileType.ROAD_12 : [EdgeType.ROAD, EdgeType.LAND, EdgeType.LAND, EdgeType.ROAD],
	TileType.ROAD_13 : [EdgeType.LAND, EdgeType.ROAD, EdgeType.LAND, EdgeType.LAND],
	TileType.ROAD_14 : [EdgeType.LAND, EdgeType.ROAD, EdgeType.LAND, EdgeType.ROAD],
	TileType.ROAD_15 : [EdgeType.LAND, EdgeType.LAND, EdgeType.LAND, EdgeType.ROAD],

	TileType.CASTLE_WALL_01 :  [EdgeType.CASTLE_WALL, EdgeType.LAND, EdgeType.CASTLE_WALL, EdgeType.LAND],
	TileType.CASTLE_WALL_02 : [EdgeType.LAND, EdgeType.CASTLE_WALL, EdgeType.LAND, EdgeType.CASTLE_WALL],
	TileType.CASTLE_TOWER_01 : [EdgeType.CASTLE_TOWER, EdgeType.CASTLE_TOWER, EdgeType.CASTLE_TOWER, EdgeType.CASTLE_TOWER],

	TileType.BRIDGE_01 : [EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE],
	TileType.BRIDGE_02 : [EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE],
	TileType.BRIDGE_03 : [EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE, EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE],
	TileType.BRIDGE_04 : [EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE, EdgeType.BRIDGE],
	TileType.BRIDGE_05 : [EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE],
	TileType.BRIDGE_06 : [EdgeType.BRIDGE, EdgeType.BRIDGE, EdgeType.BRIDGE_SIDE, EdgeType.BRIDGE_SIDE],
}

const tile_weights : Dictionary = {
	TileType.TILE_ERROR : 0,
	
	TileType.LAND_01 : 60,
	TileType.LAND_02 : 10,
	TileType.LAND_03 : 10,
	TileType.LAND_04 : 10,
	TileType.LAND_05 : 10,
	TileType.LAND_06 : 10,
	TileType.LAND_07 : 10,
	TileType.LAND_08 : 10,
	TileType.LAND_09 : 10,
	TileType.LAND_10 : 5,
	TileType.LAND_11 : 5,
	TileType.LAND_12 : 5,
	TileType.LAND_13 : 5,
	TileType.LAND_14 : 5,
	TileType.LAND_15 : 5,
	TileType.LAND_16 : 5,
	TileType.LAND_17 : 5,
	TileType.LAND_18 : 5,
	TileType.LAND_19 : 0,
	TileType.LAND_20 : 0,
	TileType.LAND_21 : 0,
	TileType.LAND_22 : 0,

	TileType.WATER : 1000000,
	TileType.WATER_NW : 0.001,
	TileType.WATER_W : 1,
	TileType.WATER_SW : 0.001,
	TileType.WATER_S : 1,
	TileType.WATER_SE : 0.001,
	TileType.WATER_E : 1,
	TileType.WATER_NE : 0.001,
	TileType.WATER_N : 1,

	TileType.WATER_01 : 0.001,
	TileType.WATER_02 : 0.001,
	TileType.WATER_03 : 0.001,
	TileType.WATER_04 : 0.001,

	TileType.WATER_05 : 0,
	# TileType.WATER_06 : 0,
	TileType.WATER_07 : 0,
	TileType.WATER_08 : 0,
	# TileType.WATER_09 : 0,
	TileType.WATER_10 : 0,

	TileType.WATER_11 : 0,
	TileType.WATER_12 : 0,
	TileType.WATER_13 : 0,
	TileType.WATER_14 : 0,
	TileType.WATER_15 : 0,
	TileType.WATER_16 : 0.1,

	TileType.ROAD_01 : 0,
	TileType.ROAD_02 : 0.001,
	TileType.ROAD_03 : 0,
	TileType.ROAD_04 : 0.001,
	TileType.ROAD_05 : 1,
	TileType.ROAD_06 : 0.001,
	TileType.ROAD_07 : 1,
	TileType.ROAD_08 : 1000,
	TileType.ROAD_09 : 1,
	TileType.ROAD_10 : 0.001,
	TileType.ROAD_11 : 1,
	TileType.ROAD_12 : 0.001,
	TileType.ROAD_13 : 0,
	TileType.ROAD_14 : 0.001,
	TileType.ROAD_15 : 0,

	TileType.CASTLE_WALL_01 : 1, 
	TileType.CASTLE_WALL_02 : 1,
	TileType.CASTLE_TOWER_01 : 0,

	TileType.BRIDGE_01 : 0,
	TileType.BRIDGE_02 : 0,
	TileType.BRIDGE_03 : 0,
	TileType.BRIDGE_04 : 0,
	TileType.BRIDGE_05 : 0,
	TileType.BRIDGE_06 : 0,
}

const  tile_vector : Dictionary = {
	TileType.TILE_ERROR : Vector2(22, 4),

	TileType.LAND_01 : Vector2(0, 0),
	TileType.LAND_02 : Vector2(0, 1),
	TileType.LAND_03 : Vector2(0, 2),
	TileType.LAND_04 : Vector2(1, 0),
	TileType.LAND_05 : Vector2(1, 1),
	TileType.LAND_06 : Vector2(1, 2),
	TileType.LAND_07 : Vector2(2, 0),
	TileType.LAND_08 : Vector2(2, 1),
	TileType.LAND_09 : Vector2(2, 2),

	TileType.LAND_10 : Vector2i(0, 4),
	TileType.LAND_11 : Vector2i(1, 4),
	TileType.LAND_16 : Vector2i(2, 4),
	TileType.LAND_13 : Vector2i(0, 5),
	TileType.LAND_14 : Vector2i(1, 5),
	TileType.LAND_15 : Vector2i(2, 5),
	TileType.LAND_12 : Vector2i(0, 6),
	TileType.LAND_17 : Vector2i(1, 6),
	TileType.LAND_18 : Vector2i(2, 6),
	TileType.LAND_19 : Vector2i(3, 4),
	TileType.LAND_20 : Vector2i(4, 4),
	TileType.LAND_21 : Vector2i(3, 5),
	TileType.LAND_22 : Vector2i(4, 5),

	TileType.WATER : Vector2(8, 11),
	TileType.WATER_NW : Vector2(7, 10),
	TileType.WATER_W : Vector2(7, 11),
	TileType.WATER_SW : Vector2(7, 12),
	TileType.WATER_S : Vector2(8, 12),
	TileType.WATER_SE : Vector2(9, 12),
	TileType.WATER_E : Vector2(9, 11),
	TileType.WATER_NE : Vector2(9, 10),
	TileType.WATER_N : Vector2(8, 10),

	TileType.WATER_01 : Vector2(10, 11),
	TileType.WATER_02 : Vector2(11, 11),
	TileType.WATER_03 : Vector2(11, 10),
	TileType.WATER_04 : Vector2(10, 10),
	TileType.WATER_05 : Vector2(0, 10),
	# TileType.WATER_06 : Vector2(0, 11),
	TileType.WATER_07 : Vector2(0, 12),
	TileType.WATER_08 : Vector2(1,13),
	# TileType.WATER_09 : Vector2(2, 13),
	TileType.WATER_10 : Vector2(3,13),

	TileType.WATER_11 : Vector2(5, 10),
	TileType.WATER_12 : Vector2(5, 12),
	TileType.WATER_13 : Vector2(6, 11),
	TileType.WATER_14 : Vector2(4, 11),
	TileType.WATER_15 : Vector2(5, 11),
	TileType.WATER_16 : Vector2(0, 13),

	TileType.ROAD_01 : Vector2(15, 0),
	TileType.ROAD_02 : Vector2(15, 1),
	TileType.ROAD_03 : Vector2(15, 2),
	TileType.ROAD_04 : Vector2(16, 0),
	TileType.ROAD_05 : Vector2(17, 0),
	TileType.ROAD_06 : Vector2(18, 0),
	TileType.ROAD_07 : Vector2(16, 1),
	TileType.ROAD_08 : Vector2(17, 1),
	TileType.ROAD_09 : Vector2(18, 1),
	TileType.ROAD_10 : Vector2(16, 2),
	TileType.ROAD_11 : Vector2(17, 2),
	TileType.ROAD_12 : Vector2(18, 2),
	TileType.ROAD_13 : Vector2(16, 3),
	TileType.ROAD_14 : Vector2(17, 3),
	TileType.ROAD_15 : Vector2(18, 3), 

	TileType.CASTLE_WALL_01 : Vector2(18,27),
	TileType.CASTLE_WALL_02 : Vector2(19, 26),
	TileType.CASTLE_TOWER_01 : Vector2(18,26),

	TileType.BRIDGE_01 : Vector2(10, 31),
	TileType.BRIDGE_02 : Vector2(12, 32),
	TileType.BRIDGE_03 : Vector2(22, 26),
	TileType.BRIDGE_04 : Vector2(24, 26),
	TileType.BRIDGE_05 : Vector2(22, 28),
	TileType.BRIDGE_06 : Vector2(24, 28),
}

const priority_options = [TileType.WATER, TileType.WATER_15]

# TODO: Update for unique weights
const  cell_to_tile_options : Dictionary = {
	Enums.Cell.DISTRICT_STAND_IN : [
		TileType.LAND_01,
		TileType.LAND_02,
		TileType.LAND_03,
		TileType.LAND_04,
		# TileType.LAND_05,
		# TileType.LAND_06,
		# TileType.LAND_07,
		# TileType.LAND_08,
		# TileType.LAND_09,
	],

	Enums.Cell.WATER_BORDER : 
		[
					TileType.WATER_NW, 
					TileType.WATER_W, 
					TileType.WATER_SW, 
					TileType.WATER_S, 
					TileType.WATER_SE, 
					TileType.WATER_E, 
					TileType.WATER_NE, 
					TileType.WATER_N,
					TileType.WATER_01, 
					TileType.WATER_02, 
					TileType.WATER_03, 
					TileType.WATER_04, 
					TileType.WATER_05, 
					# TileType.WATER_06, 
					TileType.WATER_07, 
					TileType.WATER_08, 
					# TileType.WATER_09, 
					TileType.WATER_10, 
						
					TileType.WATER_11, 
					TileType.WATER_12, 
					TileType.WATER_13, 
					TileType.WATER_14, 
						
					],
	Enums.Cell.WATER : [
					TileType.WATER, 
					# TileType.WATER_15, 
					TileType.WATER_01, 
					TileType.WATER_02, 
					TileType.WATER_03, 
					TileType.WATER_04,
					TileType.WATER_11, 
					TileType.WATER_12, 
					TileType.WATER_13, 
					TileType.WATER_14, 
					TileType.WATER_16,
	],
	Enums.Cell.CITY_ROAD : [
				TileType.ROAD_01,
				TileType.ROAD_02,
				TileType.ROAD_03,
				TileType.ROAD_04,
				TileType.ROAD_05,
				TileType.ROAD_06,
				TileType.ROAD_07,
				TileType.ROAD_08,
				TileType.ROAD_09,
				TileType.ROAD_10,
				TileType.ROAD_11,
				TileType.ROAD_12,
				TileType.ROAD_13,
				TileType.ROAD_14,
				TileType.ROAD_15,
	],

	Enums.Cell.OUTSIDE_SPACE : [
				TileType.LAND_01,
				TileType.LAND_02,
				TileType.LAND_03,
				TileType.LAND_04,
				TileType.LAND_05,
				TileType.LAND_06,
				TileType.LAND_07,
				TileType.LAND_08,
				TileType.LAND_09,
				TileType.LAND_10,
				TileType.LAND_11,
				TileType.LAND_12,
				TileType.LAND_13,
				# TileType.LAND_14,
				TileType.LAND_15,
				TileType.LAND_16,
				TileType.LAND_17,
				TileType.LAND_18,
				TileType.LAND_19,
				TileType.LAND_20,
				TileType.LAND_21,
				TileType.LAND_22,
	],

	Enums.Cell.CASTLE_WALL : [
		TileType.CASTLE_WALL_01,
		TileType.CASTLE_WALL_02,
		TileType.CASTLE_TOWER_01,
	],

	Enums.Cell.BRIDGE : [
		TileType.BRIDGE_01,
		TileType.BRIDGE_02,
		TileType.BRIDGE_03,
		TileType.BRIDGE_04,
		TileType.BRIDGE_05,
		TileType.BRIDGE_06,
	]
}

const cell_alt_weightings : Dictionary = {
	# Enums.Cell.WATER : {
	# 	TileType.WATER : 1, 
	# 	TileType.WATER_01 : 0, 
	# 	TileType.WATER_02 : 0, 
	# 	TileType.WATER_03 : 0, 
	# 	TileType.WATER_04 : 0,
	# 	TileType.WATER_11 : 0, 
	# 	TileType.WATER_12 : 0, 
	# 	TileType.WATER_13 : 0, 
	# 	TileType.WATER_14 : 0, 
	# 	TileType.WATER_16 : 0,
	# }
}

func get_opposite_direction(direction : int) -> int:
	match direction: 
		Dir.NORTH: return Dir.SOUTH
		Dir.SOUTH: return Dir.NORTH
		Dir.EAST: return Dir.WEST
		Dir.WEST: return Dir.EAST
		_: 
			print_debug("Bad value")
			return -1


var overlay_chance : Dictionary = {
	Enums.Cell.DISTRICT_STAND_IN : 0.2,
	Enums.Cell.DISTRICT_STAND_IN_MARKET : 0.2,
	Enums.Cell.DISTRICT_STAND_IN_2 : 0.2,
	Enums.Cell.DISTRICT_STAND_IN_3 : 0.2,
	Enums.Cell.DISTRICT_STAND_IN_SLUMS : 0.65,
	Enums.Cell.DISTRICT_STAND_IN_CASTLE : 0.6,
	Enums.Cell.OUTSIDE_SPACE : 0.25,
}

var road_overlay_chance : Dictionary = {
	Enums.Cell.DISTRICT_STAND_IN : 0.65,
	Enums.Cell.DISTRICT_STAND_IN_MARKET : 0.65,
	Enums.Cell.DISTRICT_STAND_IN_2 : 0.65,
	Enums.Cell.DISTRICT_STAND_IN_3 : 0.65,
	Enums.Cell.DISTRICT_STAND_IN_SLUMS : 0.0,
	Enums.Cell.DISTRICT_STAND_IN_CASTLE : 0.65,
	Enums.Cell.OUTSIDE_SPACE : 0.08,
}

enum OverlayTiles {
	TREE_1 = 1,
	TREE_2 = 2,
	TREE_3 = 3,
	TREE_4 = 4,
	ROCK_1 = 6,
	FRUIT_TREE_01,
	FRUIT_TREE_02,

	# Red houses
	WELL_01,
	TENT_01,
	HOUSE_01,
	HOUSE_02,
	HOUSE_03,
	HOUSE_04,
	HOUSE_05,
	HOUSE_06,
	HOUSE_07,
	HOUSE_08,
	HOUSE_09,
	HOUSE_10,
	HOUSE_11,
	HOUSE_12,
	HOUSE_13,
	HOUSE_14,
	HOUSE_15,
	HOUSE_16,
	HOUSE_17,
	HOUSE_18,
	HOUSE_19,
	HOUSE_20,
	HOUSE_21,
	HOUSE_22,

	# Green houses
	G_WELL_01,
	G_TENT_01,
	G_HOUSE_01,
	G_HOUSE_02,
	G_HOUSE_03,
	G_HOUSE_04,
	G_HOUSE_05,
	G_HOUSE_06,
	G_HOUSE_07,
	G_HOUSE_08,
	G_HOUSE_09,
	G_HOUSE_10,
	G_HOUSE_11,
	G_HOUSE_12,
	G_HOUSE_13,
	G_HOUSE_14,
	G_HOUSE_15,
	G_HOUSE_16,
	G_HOUSE_17,
	G_HOUSE_18,
	G_HOUSE_19,
	G_HOUSE_20,
	G_HOUSE_21,
	G_HOUSE_22,

	# Brown houses
	B_WELL_01,
	B_TENT_01,
	B_HOUSE_01,
	B_HOUSE_02,
	B_HOUSE_03,
	B_HOUSE_04,
	B_HOUSE_05,
	B_HOUSE_06,
	B_HOUSE_07,
	B_HOUSE_08,
	B_HOUSE_09,
	B_HOUSE_10,
	B_HOUSE_11,
	B_HOUSE_12,
	B_HOUSE_13,
	B_HOUSE_14,
	B_HOUSE_15,
	B_HOUSE_16,
	B_HOUSE_17,
	B_HOUSE_18,
	B_HOUSE_19,
	B_HOUSE_20,
	B_HOUSE_21,
	B_HOUSE_22,
	
}

const overlay_vector : Dictionary = {
	OverlayTiles.TREE_1 : Vector2(0,29),
	OverlayTiles.TREE_2 : Vector2(0,30),
	OverlayTiles.TREE_3 : Vector2(3,26),
	OverlayTiles.TREE_4 : Vector2(3,27),
	OverlayTiles.FRUIT_TREE_01 : Vector2(2, 26),
	OverlayTiles.FRUIT_TREE_02 : Vector2(2, 27),
	OverlayTiles.WELL_01 : Vector2(15, 37),
	OverlayTiles.ROCK_1 : Vector2(1,26),

	OverlayTiles.TENT_01 : Vector2(4, 33),
	OverlayTiles.HOUSE_01 : Vector2(15, 33),
	OverlayTiles.HOUSE_02 : Vector2(17, 33),
	OverlayTiles.HOUSE_03 : Vector2(18, 33),
	OverlayTiles.HOUSE_04 : Vector2(19, 33),
	OverlayTiles.HOUSE_05 : Vector2(14, 34),
	OverlayTiles.HOUSE_06 : Vector2(15, 34),
	OverlayTiles.HOUSE_07 : Vector2(16, 34),
	OverlayTiles.HOUSE_08 : Vector2(17, 34),
	OverlayTiles.HOUSE_09 : Vector2(18, 34),
	OverlayTiles.HOUSE_10 : Vector2(19, 34),
	OverlayTiles.HOUSE_11 : Vector2(14, 35),
	OverlayTiles.HOUSE_12 : Vector2(15, 35),
	OverlayTiles.HOUSE_13 : Vector2(16, 35),
	OverlayTiles.HOUSE_14 : Vector2(17, 35),
	OverlayTiles.HOUSE_15 : Vector2(18, 35),
	OverlayTiles.HOUSE_16 : Vector2(19, 35),
	OverlayTiles.HOUSE_17 : Vector2(14, 36),
	OverlayTiles.HOUSE_18 : Vector2(15, 36),
	OverlayTiles.HOUSE_19 : Vector2(16, 36),
	OverlayTiles.HOUSE_20 : Vector2(17, 36),
	OverlayTiles.HOUSE_21 : Vector2(18, 36),
	OverlayTiles.HOUSE_22 : Vector2(19, 36),

	OverlayTiles.G_WELL_01 : Vector2(5, 37),
	OverlayTiles.G_TENT_01 : Vector2(4, 33),
	OverlayTiles.G_HOUSE_01 : Vector2(5, 33),
	OverlayTiles.G_HOUSE_02 : Vector2(7, 33),
	OverlayTiles.G_HOUSE_03 : Vector2(8, 33),
	OverlayTiles.G_HOUSE_04 : Vector2(9, 33),
	OverlayTiles.G_HOUSE_05 : Vector2(4, 34),
	OverlayTiles.G_HOUSE_06 : Vector2(5, 34),
	OverlayTiles.G_HOUSE_07 : Vector2(6, 34),
	OverlayTiles.G_HOUSE_08 : Vector2(7, 34),
	OverlayTiles.G_HOUSE_09 : Vector2(8, 34),
	OverlayTiles.G_HOUSE_10 : Vector2(9, 34),
	OverlayTiles.G_HOUSE_11 : Vector2(4, 35),
	OverlayTiles.G_HOUSE_12 : Vector2(5, 35),
	OverlayTiles.G_HOUSE_13 : Vector2(6, 35),
	OverlayTiles.G_HOUSE_14 : Vector2(7, 35),
	OverlayTiles.G_HOUSE_15 : Vector2(8, 35),
	OverlayTiles.G_HOUSE_16 : Vector2(9, 35),
	OverlayTiles.G_HOUSE_17 : Vector2(4, 36),
	OverlayTiles.G_HOUSE_18 : Vector2(5, 36),
	OverlayTiles.G_HOUSE_19 : Vector2(6, 36),
	OverlayTiles.G_HOUSE_20 : Vector2(7, 36),
	OverlayTiles.G_HOUSE_21 : Vector2(8, 36),
	OverlayTiles.G_HOUSE_22 : Vector2(9, 36),

	OverlayTiles.B_WELL_01 : Vector2(5, 30),
	OverlayTiles.B_TENT_01 : Vector2(4, 26),
	OverlayTiles.B_HOUSE_01 : Vector2(5, 26),
	OverlayTiles.B_HOUSE_02 : Vector2(7, 26),
	OverlayTiles.B_HOUSE_03 : Vector2(8, 26),
	OverlayTiles.B_HOUSE_04 : Vector2(9, 26),
	OverlayTiles.B_HOUSE_05 : Vector2(4, 27),
	OverlayTiles.B_HOUSE_06 : Vector2(5, 27),
	OverlayTiles.B_HOUSE_07 : Vector2(6, 27),
	OverlayTiles.B_HOUSE_08 : Vector2(7, 27),
	OverlayTiles.B_HOUSE_09 : Vector2(8, 27),
	OverlayTiles.B_HOUSE_10 : Vector2(9, 27),
	OverlayTiles.B_HOUSE_11 : Vector2(4, 28),
	OverlayTiles.B_HOUSE_12 : Vector2(5, 28),
	OverlayTiles.B_HOUSE_13 : Vector2(6, 28),
	OverlayTiles.B_HOUSE_14 : Vector2(7, 28),
	OverlayTiles.B_HOUSE_15 : Vector2(8, 28),
	OverlayTiles.B_HOUSE_16 : Vector2(9, 28),
	OverlayTiles.B_HOUSE_17 : Vector2(4, 29),
	OverlayTiles.B_HOUSE_18 : Vector2(5, 29),
	OverlayTiles.B_HOUSE_19 : Vector2(6, 29),
	OverlayTiles.B_HOUSE_20 : Vector2(7, 29),
	OverlayTiles.B_HOUSE_21 : Vector2(8, 29),
	OverlayTiles.B_HOUSE_22 : Vector2(9, 29),
}

const overlay_by_cell : Dictionary = {
	# [OverlayTile, Selection Weight, Can be road adjacent, Can be non-road adjacent, direction facing]
	Enums.Cell.DISTRICT_STAND_IN_CASTLE : [
								# [OverlayTiles.HOUSE_01, 1, true, false, Dir.SOUTH],
								[OverlayTiles.HOUSE_02, 1, true, true, Dir.ANY],
								[OverlayTiles.HOUSE_03, 1, true, true, Dir.ANY],
								[OverlayTiles.HOUSE_04, 1, true, true, Dir.ANY],
								# [OverlayTiles.HOUSE_05, 1, true, true, Dir.EAST],
								# [OverlayTiles.HOUSE_05, 1, true, true, Dir.WEST],
								# [OverlayTiles.HOUSE_06, 1, true, true, Dir.EAST],
								# [OverlayTiles.HOUSE_06, 1, true, true, Dir.WEST],
								# [OverlayTiles.HOUSE_14, 1, true, true, Dir.NORTH],
								# [OverlayTiles.HOUSE_15, 1, true, true, Dir.NORTH],
								# [OverlayTiles.HOUSE_16, 1, true, true, Dir.NORTH],
								
								[OverlayTiles.FRUIT_TREE_01, 1, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_02, 1, false, true, Dir.ANY],
								[OverlayTiles.WELL_01, 1, false, true, Dir.ANY],

	],

	Enums.Cell.DISTRICT_STAND_IN_2 : [
								# [OverlayTiles.HOUSE_01, 1, true, false, Dir.SOUTH],
								[OverlayTiles.G_HOUSE_02, 1, true, false, Dir.SOUTH],
								[OverlayTiles.G_HOUSE_03, 1, true, false, Dir.SOUTH],
								[OverlayTiles.G_HOUSE_04, 1, true, false, Dir.SOUTH],
								[OverlayTiles.G_HOUSE_05, 1, true, false, Dir.EAST],
								[OverlayTiles.G_HOUSE_05, 1, true, false, Dir.WEST],
								[OverlayTiles.G_HOUSE_06, 1, true, false, Dir.EAST],
								[OverlayTiles.G_HOUSE_06, 1, true, false, Dir.WEST],
								[OverlayTiles.G_HOUSE_14, 1, true, false, Dir.NORTH],
								[OverlayTiles.G_HOUSE_15, 1, true, false, Dir.NORTH],
								[OverlayTiles.G_HOUSE_16, 1, true, false, Dir.NORTH],
								
								[OverlayTiles.FRUIT_TREE_01, 5, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_02, 5, false, true, Dir.ANY],
								[OverlayTiles.G_WELL_01, 1, false, true, Dir.ANY],

	],

	Enums.Cell.DISTRICT_STAND_IN_3 : [
								# [OverlayTiles.HOUSE_01, 1, true, false, Dir.SOUTH],
								[OverlayTiles.B_HOUSE_02, 1, true, false, Dir.SOUTH],
								[OverlayTiles.B_HOUSE_03, 1, true, false, Dir.SOUTH],
								[OverlayTiles.B_HOUSE_04, 1, true, false, Dir.SOUTH],
								[OverlayTiles.B_HOUSE_05, 1, true, false, Dir.EAST],
								[OverlayTiles.B_HOUSE_05, 1, true, false, Dir.WEST],
								[OverlayTiles.B_HOUSE_06, 1, true, false, Dir.EAST],
								[OverlayTiles.B_HOUSE_06, 1, true, false, Dir.WEST],
								[OverlayTiles.B_HOUSE_14, 1, true, false, Dir.NORTH],
								[OverlayTiles.B_HOUSE_15, 1, true, false, Dir.NORTH],
								[OverlayTiles.B_HOUSE_16, 1, true, false, Dir.NORTH],
								
								[OverlayTiles.FRUIT_TREE_01, 5, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_02, 5, false, true, Dir.ANY],
								[OverlayTiles.B_WELL_01, 1, false, true, Dir.ANY],

	],

	Enums.Cell.DISTRICT_STAND_IN_SLUMS : [
								[OverlayTiles.TENT_01, 5, false, true, Dir.ANY],
								[OverlayTiles.G_TENT_01, 5, false, true, Dir.ANY],
								[OverlayTiles.B_TENT_01, 5, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_01, 10, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_02, 10, false, true, Dir.ANY],
	],

	Enums.Cell.DISTRICT_STAND_IN_MARKET : [
								[OverlayTiles.HOUSE_01, 1, true, false, Dir.ANY],
								[OverlayTiles.G_HOUSE_01, 1, true, false, Dir.ANY],
								[OverlayTiles.B_HOUSE_01, 1, true, false, Dir.ANY],
								
								[OverlayTiles.WELL_01, 1, false, true, Dir.ANY],
								[OverlayTiles.G_WELL_01, 1, false, true, Dir.ANY],
								[OverlayTiles.B_WELL_01, 1, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_01, 2, false, true, Dir.ANY],
								[OverlayTiles.FRUIT_TREE_02, 2, false, true, Dir.ANY],
	],

	Enums.Cell.OUTSIDE_SPACE : [
								[OverlayTiles.TREE_1 ,10, true, true, Dir.ANY],
								[OverlayTiles.TREE_2 ,10, true, true, Dir.ANY],
								[OverlayTiles.TREE_3,  4, true, true, Dir.ANY],
								[OverlayTiles.TREE_4,  4, true, true, Dir.ANY],
								[OverlayTiles.ROCK_1,  2, true, true, Dir.ANY],
								[OverlayTiles.TENT_01, 100, true, false, Dir.ANY],
								],
}

const valid_for_overlay : Array[int] = [
				TileType.LAND_01,
				TileType.LAND_02,
				TileType.LAND_03,
				TileType.LAND_04,
				TileType.LAND_05,
				TileType.LAND_06,
				TileType.LAND_07,
				TileType.LAND_08,
				TileType.LAND_09,
]
